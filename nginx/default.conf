# Define a group of servers for the client (React app)
upstream client {
    server client:3000;  # 'client' is the Docker service name, port 3000
}

# Define a group of servers for the API (Backend)
upstream api {
    server api:5000;  # 'api' is the Docker service name, port 5000
}

server {
    listen 80;  # Listen on port 80 for incoming HTTP requests

    # Handle all root path requests by forwarding to the React app
    location / {
        proxy_pass http://client;  # Forward to 'client' upstream
    }

    # Handle WebSocket connections for hot reloading and real-time features
    location /sockjs-node {
        proxy_pass http://client;  # Forward to 'client' upstream
        proxy_http_version 1.1;    # Use HTTP/1.1 for WebSockets
        proxy_set_header Upgrade $http_upgrade;  # Handle protocol upgrades
        proxy_set_header Connection "Upgrade";    # Maintain connection for WebSockets
    }

    # Handle API requests by forwarding to the backend
    location /api {
        rewrite /api/(.*) /$1 break;  # Remove '/api' prefix before forwarding
        proxy_pass http://api;        # Forward to 'api' upstream
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "Upgrade";
        proxy_set_header Host $host;
    }
}
